name: Upload Python Package

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      tag: ${{ steps.get_version.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from in_version.py
        id: get_version
        run: |
          VERSION=$(python - << 'EOF'
          import importlib.util
          spec = importlib.util.spec_from_file_location("vermod", "_version.py")
          mod = importlib.util.module_from_spec(spec)
          spec.loader.exec_module(mod)
          print(mod.__version__)
          EOF
          )
          TAG="v${VERSION}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG"       >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name:    ${{ steps.get_version.outputs.tag }}
          release_name: ${{ steps.get_version.outputs.tag }}
          draft:        false
          prerelease:   false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-build:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Debug file existence
        run: ls -la

      - name: Build release distributions
        run: |
          # Wipe out any previous build artifacts
          rm -rf dist build *.egg-info
          python -m pip install --upgrade build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
      contents: read
    environment:
      name: pypi
      url: https://github.com/looking-glass-station/tqdm-sound/
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
